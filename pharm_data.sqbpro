<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="pharma_data.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="0"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="3702"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="Channel" custom_title="0" dock_id="4" table="4,7:mainChannel"/><table title="Channel" custom_title="0" dock_id="13" table="4,7:mainChannel"/><table title="SalesRep" custom_title="0" dock_id="5" table="4,8:mainSalesRep"/><dock_state state="000000ff00000000fd00000001000000020000044200000288fc0100000002fc00000000000004420000000000fffffffa00000000010000000afb000000160064006f0063006b00420072006f00770073006500310100000000ffffffff0000000000000000fb000000160064006f0063006b00420072006f00770073006500320100000000ffffffff0000000000000000fb000000160064006f0063006b00420072006f00770073006500330100000000ffffffff0000000000000000fb000000160064006f0063006b00420072006f00770073006500360100000000ffffffff0000000000000000fb000000160064006f0063006b00420072006f00770073006500370100000000ffffffff0000000000000000fb000000160064006f0063006b00420072006f00770073006500380100000000ffffffff0000000000000000fb000000160064006f0063006b00420072006f00770073006500390100000000ffffffff0000000000000000fb000000180064006f0063006b00420072006f007700730065003100300100000000ffffffff0000000000000000fb000000180064006f0063006b00420072006f007700730065003100310100000000ffffffff0000000000000000fb000000180064006f0063006b00420072006f007700730065003100320100000000ffffffff0000000000000000fc00000000000004420000011e00fffffffa000000020100000003fb000000180064006f0063006b00420072006f007700730065003100330100000000ffffffff0000011e00fffffffb000000160064006f0063006b00420072006f00770073006500340100000000ffffffff0000011e00fffffffb000000160064006f0063006b00420072006f00770073006500350100000000ffffffff0000011e00ffffff000004420000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Channel" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="66"/><column index="2" value="85"/><column index="3" value="74"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="SalesRep" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="73"/><column index="2" value="40"/><column index="3" value="58"/><column index="4" value="70"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="WEEK 7 TASK PHASE 2">SELECT *
FROM Pharm_sales
WHERE Distributor IS NULL 
   OR &quot;Customer Name&quot; IS NULL 
   OR City IS NULL 
   OR Country IS NULL
   OR Latitude IS NULL 
   OR Longitude IS NULL
   OR Channel IS NULL
   OR &quot;Product Name&quot; IS NULL
   OR Quantity IS NULL 
   OR Price IS NULL 
   OR Sales IS NULL 
   OR Month IS NULL 
   OR Year IS NULL;
   
   SELECT Distributor, &quot;Customer Name&quot;, City, Country, Channel, &quot;Product Name&quot;, Quantity, Month, Year, COUNT(*)
FROM Pharm_sales
GROUP BY Distributor, &quot;Customer Name&quot;, City, Country, Channel, &quot;Product Name&quot;, Quantity, Month, Year
HAVING COUNT(*) &gt; 1;

DELETE FROM Pharm_sales
WHERE ROWID NOT IN (
    SELECT MIN(ROWID)
    FROM Pharm_sales
    GROUP BY Distributor, &quot;Customer Name&quot;, City, Country, Channel, &quot;Product Name&quot;, Quantity, Month, Year
);


UPDATE Pharm_sales
SET 
    Channel = UPPER(SUBSTR(Channel, 1, 1)) || LOWER(SUBSTR(Channel, 2)),
    &quot;Sub-channel&quot; = UPPER(SUBSTR(&quot;Sub-channel&quot;, 1, 1)) || LOWER(SUBSTR(&quot;Sub-channel&quot;, 2)),
    &quot;Product Class&quot; = UPPER(SUBSTR(&quot;Product Class&quot;, 1, 1)) || LOWER(SUBSTR(&quot;Product-Class&quot;, 2));
	
	SELECT *
FROM Pharm_sales
WHERE Latitude NOT BETWEEN -90 AND 90 
   OR Longitude NOT BETWEEN -180 AND 180;
   
   SELECT *
FROM Pharm_sales
WHERE NOT Quantity GLOB '[0-9]*' 
   OR NOT Price GLOB '[0-9.]*';

SELECT MIN(Sales), MAX(Sales), AVG(Sales)
FROM Pharm_sales;
   
select * from Pharm_sales
	
</sql><sql name="WEEK 7 TASK PHASE 2 (1)">--- WEEK 7 TASK FOR 3SIGNET BY OKORIGWE CLINTON EGWOLOGHENE
---Data Cleaning and Validation
--- 1. Checking for NULL values in target columns
SELECT *
FROM Pharm_sales
WHERE Distributor IS NULL 
   OR &quot;Customer Name&quot; IS NULL 
   OR City IS NULL 
   OR Country IS NULL
   OR Latitude IS NULL 
   OR Longitude IS NULL
   OR Channel IS NULL
   OR &quot;Product Name&quot; IS NULL
   OR Quantity IS NULL 
   OR Price IS NULL 
   OR Sales IS NULL 
   OR Month IS NULL 
   OR Year IS NULL;
 ---2. Checking for duplication in the relevant column
   SELECT Distributor, &quot;Customer Name&quot;, City, Country, Channel, &quot;Product Name&quot;, Quantity, Month, Year, COUNT(*)
FROM Pharm_sales
GROUP BY Distributor, &quot;Customer Name&quot;, City, Country, Channel, &quot;Product Name&quot;, Quantity, Month, Year
HAVING COUNT(*) &gt; 1;
---3. Removal of resulting duplicate columns fron the previous Query which resulted in 122 rows affected
DELETE FROM Pharm_sales
WHERE ROWID NOT IN (
    SELECT MIN(ROWID)
    FROM Pharm_sales
    GROUP BY Distributor, &quot;Customer Name&quot;, City, Country, Channel, &quot;Product Name&quot;, Quantity, Month, Year
);

---4. Standardize channel and product class values( I had already used the tools provided by sqlite browser to standardize the values for example, changing 'Price' and 'Sales' columns to  REAL values)
UPDATE Pharm_sales
SET 
    Channel = UPPER(SUBSTR(Channel, 1, 1)) || LOWER(SUBSTR(Channel, 2)),
    &quot;Sub-channel&quot; = UPPER(SUBSTR(&quot;Sub-channel&quot;, 1, 1)) || LOWER(SUBSTR(&quot;Sub-channel&quot;, 2)),
    &quot;Product Class&quot; = UPPER(SUBSTR(&quot;Product Class&quot;, 1, 1)) || LOWER(SUBSTR(&quot;Product Class&quot;, 2));
---5. Check and correction of Geolocation data
	SELECT *
FROM Pharm_sales
WHERE Latitude NOT BETWEEN -90 AND 90 
   OR Longitude NOT BETWEEN -180 AND 180;
---6. Check that Quantity and Price contain only Numeric values
   SELECT *
FROM Pharm_sales
WHERE NOT Quantity GLOB '[0-9]*' 
   OR NOT Price GLOB '[0-9.]*';
---7. Consistency checks for Month and Year
	SELECT *
FROM Pharm_sales
WHERE Month NOT BETWEEN 1 AND 12 
   OR Year NOT BETWEEN 2017 AND 2020;  
---8. Correct the spelling 'Alfa' to 'Alpha' 
  UPDATE Pharm_sales
SET &quot;Sales Team&quot; = 'Alpha'
WHERE &quot;Sales Team&quot; = 'Alfa';

---9. Validate aggregate data to check for outliers
SELECT MIN(Sales), MAX(Sales), AVG(Sales)
FROM Pharm_sales;
---10. View table to confirm changes
select * from Pharm_sales
	
</sql><sql name="creating relationship tables and updating them with values from fact table">-- Create a table for Distributors
CREATE TABLE Distributor (
    DistributorID INTEGER PRIMARY KEY,
    DistributorName TEXT UNIQUE NOT NULL
);
INSERT INTO Distributor (DistributorName)
SELECT DISTINCT Distributor FROM Pharm_sales;

-- Create a table for Customers
CREATE TABLE Customer (
    CustomerID INTEGER PRIMARY KEY,
    CustomerName TEXT UNIQUE NOT NULL
);
INSERT INTO Customer (CustomerName)
SELECT DISTINCT &quot;Customer Name&quot; FROM Pharm_sales;

-- Create a table for Products
CREATE TABLE Product (
    ProductID INTEGER PRIMARY KEY,
    ProductName TEXT UNIQUE NOT NULL,
    ProductClass TEXT
);
INSERT INTO Product (ProductName, ProductClass)
SELECT DISTINCT &quot;Product Name&quot;, &quot;Product Class&quot; FROM Pharm_sales;

-- Create a table for Sales Representatives
CREATE TABLE SalesRep (
    SalesRepID INTEGER PRIMARY KEY,
    Name TEXT UNIQUE NOT NULL,
    Manager TEXT,
    SalesTeam TEXT
);
INSERT INTO SalesRep (Name, Manager, SalesTeam)
SELECT DISTINCT &quot;Name of Sales Rep&quot;, Manager, &quot;Sales Team&quot; FROM Pharm_sales;

-- Create a table for Channels
CREATE TABLE Channel (
    ChannelID INTEGER PRIMARY KEY,
    ChannelName TEXT,
    SubChannel TEXT
);
INSERT INTO Channel (ChannelName, SubChannel)
SELECT DISTINCT Channel, &quot;Sub-channel&quot; FROM Pharm_sales;

-- Create a table for Location data
CREATE TABLE Location (
    LocationID INTEGER PRIMARY KEY,
    City TEXT,
    Country TEXT,
    Latitude REAL,
    Longitude REAL
);
INSERT INTO Location (City, Country, Latitude, Longitude)
SELECT DISTINCT City, Country, Latitude, Longitude FROM Pharm_sales;

-- Create a new Sales table to store transactional data with foreign keys
CREATE TABLE Sales (
    SaleID INTEGER PRIMARY KEY,
    DistributorID INTEGER,
    CustomerID INTEGER,
    ProductID INTEGER,
    SalesRepID INTEGER,
    ChannelID INTEGER,
    LocationID INTEGER,
    Quantity INTEGER,
    Price REAL,
    Sales REAL,
    Month INTEGER,
    Year INTEGER,
    FOREIGN KEY (DistributorID) REFERENCES Distributor(DistributorID),
    FOREIGN KEY (CustomerID) REFERENCES Customer(CustomerID),
    FOREIGN KEY (ProductID) REFERENCES Product(ProductID),
    FOREIGN KEY (SalesRepID) REFERENCES SalesRep(SalesRepID),
    FOREIGN KEY (ChannelID) REFERENCES Channel(ChannelID),
    FOREIGN KEY (LocationID) REFERENCES Location(LocationID)
);

-- Insert data from the parent table into the Sales table
INSERT INTO Sales (DistributorID, CustomerID, ProductID, SalesRepID, ChannelID, LocationID, Quantity, Price, Sales, Month, Year)
SELECT
    (SELECT DistributorID FROM Distributor WHERE DistributorName = Pharm_sales.Distributor),
    (SELECT CustomerID FROM Customer WHERE CustomerName = Pharm_sales.&quot;Customer Name&quot;),
    (SELECT ProductID FROM Product WHERE ProductName = Pharm_sales.&quot;Product Name&quot;),
    (SELECT SalesRepID FROM SalesRep WHERE Name = Pharm_sales.&quot;Name of Sales Rep&quot;),
    (SELECT ChannelID FROM Channel WHERE ChannelName = Pharm_sales.Channel AND SubChannel = Pharm_sales.&quot;Sub-channel&quot;),
    (SELECT LocationID FROM Location WHERE City = Pharm_sales.City AND Country = Pharm_sales.Country),
    Quantity, Price, Sales, Month, Year
FROM Pharm_sales; </sql><sql name="&amp;Integrity Check*">--- conduct data integrity check
PRAGMA integrity_check;</sql><current_tab id="3"/></tab_sql></sqlb_project>
